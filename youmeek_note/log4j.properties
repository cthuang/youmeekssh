#Log4j由三个重要的组成构成：日志记录器(Loggers)，输出端(Appenders)和日志格式化器(Layout)。
#Logger：控制要启用或禁用哪些日志记录语句，并对日志信息进行级别限制;
#Appenders指定了日志将打印到控制台还是文件中;
#Layout则控制日志信息的显示格式。
#======================================================
#可以设置级别(级别不同,显示信息不同)：debug > info > warn > error
#debug：可以显示debug、info、error
#info：可以显示info、error
#error：只显示error

#appenderName1是我们自己定义的名称
#rootLogger当没有给指定包下的文件设置模式,模式就是使用这个默认的属性值的模式
#log4j.rootLogger=debug,appenderName1
log4j.rootLogger=info,appenderName1
#======================================================
#输出到控制台(可以是输出文件,DB等)
#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

log4j.appender.appenderName1=org.apache.log4j.ConsoleAppender
#======================================================
#样式为TTCCLayout
#org.apache.log4j.HTMLLayout（以HTML表格形式布局），
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

#log4j.appender.appenderName1.layout=org.apache.log4j.TTCCLayout

#自定义需要配合一起用
#   %d{yyyy-MM-dd HH:mm:ss:SSS}表示自定时间格式输出
#   %p表示输出方法的级别
#   %l输出的具体类和所在行数
#   %m输出的具体信息
#   %n换行
#   %百分号开头的都是函数,区分大小写,其他的一律当作字符串输出
#例子:[2013-12-29 23:07:11:757] --- [DEBUG] --- [com.youmeek.simply.Log4jDemo.main(Log4jDemo.java:10)] --- [这是使用debug方法打印出来的语句]
log4j.appender.appenderName1.layout=org.apache.log4j.PatternLayout
log4j.appender.appenderName1.layout.ConversionPattern= [%d{yyyy-MM-dd HH:mm:ss:SSS}] --- [%p] --- [%l] --- [%m]%n